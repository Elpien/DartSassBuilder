<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <_LibSassHashCacheFile>$(IntermediateOutputPath)$(MSBuildProjectFile).DartSassBuilder.cache</_LibSassHashCacheFile>
    <_LibSassHashChanged>false</_LibSassHashChanged>
    <LibSassShouldBuildBasedOnSassFiles>false</LibSassShouldBuildBasedOnSassFiles>
    <LibSassShouldBuildBasedOnSassFiles Condition=" '$(DartSassBuilderArgs)'=='' ">true</LibSassShouldBuildBasedOnSassFiles>
  </PropertyGroup>
  
<!--
  Target used by dotnet-watch to resolve additional items.
  Add target to CustomCollectWatchItems
-->
  <Target Name="_LibSass_CustomCollectWatchItems">
    <ItemGroup>
      <Watch Include="%(SassFile.FullPath)" Condition="'%(SassFile.Watch)' != 'false'" />
    </ItemGroup>
  </Target>

<!--
  Target to clean temporary output
  Deletes the hash file, consider deleting the generated .css files? Scary...
-->
  <Target Name="LibSass_Clean"
          BeforeTargets="BeforeClean"
          Condition=" '$(LibSassShouldBuildBasedOnSassFiles)'=='true' ">
    <Delete Files="$(_LibSassHashCacheFile)" />
  </Target>

<!--
  This target calculates the hash of all files (only filename & modification timestamp, so no disk access is needed)
  Outputs:
     LibSassShouldBuildBasedOnSassFiles = true if hash has changed
     DartSassBuilderDependencyHash the new hash
-->
  <Target Name="LibSass_DetermineBuildNeeded"  
          BeforeTargets="BeforeBuild"  
          Condition="'@(SassFile->Count())'!='0' and '$(LibSassShouldBuildBasedOnSassFiles)'=='true' ">

    <Message Text="Evaluating Sass files" Importance="$(LibSassMessageLevel)" />
    <PropertyGroup>
      <_LibSass_HashFiles>@(SassFile->'%(FullPath)-%(ModifiedTime)')</_LibSass_HashFiles>
    </PropertyGroup>

    <!-- calculate hash over files & over relevant settings -->
    <Hash ItemsToHash="$(_LibSass_HashFiles)-$(LibSassOutputStyle)">
      <Output TaskParameter="HashResult" PropertyName="DartSassBuilderDependencyHash" />
    </Hash>

    <ReadLinesFromFile
        File="$(_LibSassHashCacheFile)"
        Condition="Exists('$(_LibSassHashCacheFile)')">
      <Output
          TaskParameter="Lines"
          ItemName="OldDartSassBuilderDependencyHash"/>
    </ReadLinesFromFile>

    <PropertyGroup>
      <_LibSassHashChanged Condition=" '$(DartSassBuilderDependencyHash)' != '@(OldDartSassBuilderDependencyHash)' ">true</_LibSassHashChanged>
    </PropertyGroup>
    
    <Message Text="Sass hash New = $(DartSassBuilderDependencyHash)" Importance="$(LibSassMessageLevel)" />
    <Message Text="Sass hash Old = @(OldDartSassBuilderDependencyHash)" Importance="$(LibSassMessageLevel)" />
    <Message Text="Sass changed  = $(_LibSassHashChanged)" Importance="$(LibSassMessageLevel)" />
  </Target>
  
<!-- 
  Determines DartSassBuilderArgs based on the SassFile-items
-->
  <Target Name="LibSass_BuildArgsFromFileList" 
          DependsOnTargets="LibSass_DetermineBuildNeeded"
          BeforeTargets="BeforeBuild"  
          Condition="'$(_LibSassHashChanged)-$(LibSassShouldBuildBasedOnSassFiles)' == 'true-true' ">
    <PropertyGroup>
      <_SassFileList>@(SassFilesToCompile->'&quot;%(FullPath)&quot;', ' ')</_SassFileList> <!-- all valid files, space seperated, surrounded with quotes -->
      <DartSassBuilderArgs>files $(_SassFileList) --outputstyle $(LibSassOutputStyle) --level $(LibSassOutputLevel)</DartSassBuilderArgs>
    </PropertyGroup>
    <Message Text="Converted SassFile list to argument" Importance="$(LibSassMessageLevel)" />
  </Target>
  
<!-- 
  Invokes the sass tool
-->
  <Target Name="LibSass_Build" 
          DependsOnTargets="LibSass_BuildArgsFromFileList"
          BeforeTargets="BeforeBuild"  
          Condition="'$(DartSassBuilderArgs)' != ''  ">
    <Message Text="Invoking sass preprocessor..." Importance="$(LibSassMessageLevel)" />

    <Exec Command="dotnet &quot;$(SassExe)&quot; $(DartSassBuilderArgs) "/>
  </Target>

<!-- 
  Save the hash to file if it had changed, do this after the build so it will not skip the next build on failures
-->
  <Target Name="LibSass_SaveNewHash"
          AfterTargets="LibSass_Build"
          BeforeTargets="BeforeBuild"  
          Condition=" '$(_LibSassHashChanged)' == 'true' ">
    <Message Text="Sass hash: saving new..." Importance="$(LibSassMessageLevel)" />

    <WriteLinesToFile File="$(_LibSassHashCacheFile)" 
                      Lines="$(DartSassBuilderDependencyHash)" 
                      Overwrite="True" 
                      WriteOnlyWhenDifferent="True" />
  </Target>
</Project>